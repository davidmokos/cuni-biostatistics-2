for (i in 1:nrow(M3Year)) {
print(i)
}
by(dataFrame, 1:nrow(dataFrame), function(row) str(row))
df <- M3Year
by(df, 1:nrow(df), function(row) str(row))
df <- M3Year
by(df, 1:nrow(df), function(row) class(row))
View(M3Year)
View(M3Year)
View(M3Month)
convertRowToTs <- function(row) {
class(row)
print(row[4])
#ts <- ts(start = c(row[4],row[5]))
#return(ts)
}
by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row) {
class(row)
print(row[4])
#ts <- ts(start = c(row[4],row[5]))
#return(ts)
}
df <- M3Year
by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row) {
class(row)
print(row[[4]])
#ts <- ts(start = c(row[4],row[5]))
#return(ts)
}
df <- M3Year
by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row) {
class(row)
print(row[[4:5]])
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
}
df <- M3Year
by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row) {
class(row)
print(row[[4]])
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
}
df <- M3Year
by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row) {
class(row)
print(row[[4]:[5]])
convertRowToTs <- function(row) {
class(row)
print(row[4:5)
convertRowToTs <- function(row) {
class(row)
print(row[4:5])
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
}
df <- M3Year
by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row) {
class(row)
print(row[4:5])
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
exit
}
df <- M3Year
by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row) {
class(row)
print(row[4:5])
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
break()
}
df <- M3Year
by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row) {
class(row)
print(row[4:5])
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
break()
}
df <- M3Year
by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row) {
class(row)
print(row[4:5])
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
break()
}
df <- M3Year
by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row) {
class(row)
print(row[4:5])
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
break()
}
df <- M3Year
for(i in 1:nrow(df)) {
row <- df[i,]
class(row)
break()
# do stuff with row
}
#by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row) {
class(row)
print(row[4:5])
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
break()
}
df <- M3Year
for(i in 1:nrow(df)) {
row <- df[i,]
class(row)
break()
# do stuff with row
}
#by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row) {
class(row)
print(row[4:5])
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
break()
}
df <- M3Year
for(i in 1:nrow(df)) {
row <- df[i,]
class(row)
head(row)
break()
# do stuff with row
}
#by(df, 1:nrow(df), function(row) convertRowToTs(row))
for(i in 1:nrow(df)) {
row <- df[i,]
class(row)
head(row)
break()
# do stuff with row
}
convertRowToTs <- function(row) {
class(row)
print(row[4:5])
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
break()
}
df <- M3Year
for(i in 1:nrow(df)) {
row <- df[i,]
print(class(row))
head(row)
break()
# do stuff with row
}
#by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row) {
class(row)
print(as.vector(row[,6:]))
convertRowToTs <- function(row) {
class(row)
print(as.vector(row[,6:ncol(row)]))
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
break()
}
df <- M3Year
for(i in 1:nrow(df)) {
row <- df[i,]
class(row)
head(row)
break()
# do stuff with row
}
#by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row) {
class(row)
print(as.vector(row[,6:ncol(row)]))
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
break()
}
df <- M3Year
for(i in 1:nrow(df)) {
row <- df[i,]
convertRowToTs(row)
head(row)
break()
# do stuff with row
}
convertRowToTs <- function(row) {
class(row)
print(as.vector(row[,6:6+row$N]))
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
break()
}
df <- M3Year
for(i in 1:nrow(df)) {
row <- df[i,]
convertRowToTs(row)
head(row)
break()
# do stuff with row
}
convertRowToTs <- function(row) {
class(row)
print(as.vector(row[,6:6+row$N]))
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
break()
}
df <- M3Year
for(i in 1:nrow(df)) {
row <- df[i,]
convertRowToTs(row)
head(row)
break()
# do stuff with row
}
convertRowToTs <- function(row) {
class(row)
print(as.vector(row[,6:6+row[[1]]]))
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
break()
}
df <- M3Year
for(i in 1:nrow(df)) {
row <- df[i,]
convertRowToTs(row)
head(row)
break()
# do stuff with row
}
convertRowToTs <- function(row) {
class(row)
print(as.vector(row[,6:row[[1]]]))
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
break()
}
df <- M3Year
for(i in 1:nrow(df)) {
row <- df[i,]
convertRowToTs(row)
head(row)
break()
# do stuff with row
}
convertRowToTs <- function(row) {
class(row)
print(as.vector(row[,6:row$N]))
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
break()
}
df <- M3Year
for(i in 1:nrow(df)) {
row <- df[i,]
convertRowToTs(row)
head(row)
break()
# do stuff with row
}
convertRowToTs <- function(row) {
class(row)
print(as.vector(row[,6:(row$N+6])))
convertRowToTs <- function(row) {
class(row)
print(as.vector(row[,6:(row$N+6)]))
#ts <- ts(start = c(row[[4]],row[[5]]))
#return(ts)
break()
}
df <- M3Year
for(i in 1:nrow(df)) {
row <- df[i,]
convertRowToTs(row)
head(row)
break()
# do stuff with row
}
convertRowToTs <- function(row, frequency) {
ts <- ts(as.vector(row[,6:(5+row$N)]), start = c(row[[4]],row[[5]]), frequency = frequency)
return(ts)
}
df <- M3Year
freq <- 1
for(i in 1:nrow(df)) {
ts <- convertRowToTs(df[i,], freq)
break()
}
#by(df, 1:nrow(df), function(row) convertRowToTs(row))
View(ts)
convertRowToTs <- function(row, frequency) {
ts <- ts(as.vector(row[,6:(5+row$N)]), start = c(row[[4]],row[[5]]), frequency = frequency)
return(ts)
}
convertRowToTs <- function(row, frequency) {
ts <- ts(as.vector(row[,6:(5+row$N)]), start = c(row[[4]],row[[5]]), frequency = frequency)
return(ts)
}
df <- M3Year
freq <- 1
for(i in 1:1) {
ts <- convertRowToTs(df[i,], freq)
}
#by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row, frequency) {
ts <- ts(as.vector(row[,6:(5+row$N)]), start = c(row[[4]],row[[5]]), frequency = frequency)
return(ts)
}
df <- M3Year
freq <- 1
for(i in 1:1) {
ts <- convertRowToTs(df[i,], freq)
}
#by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row, frequency) {
ts <- ts(as.vector(row[,6:(5+row$N)]), start = c(row[[4]],row[[5]]), frequency = frequency)
return(ts)
}
df <- M3Year
freq <- 1
for(i in 1:1) {
ts <- convertRowToTs(df[i,], freq)
plot(ts, xlab = "Time", main = as.character(i))
}
convertRowToTs <- function(row, frequency) {
ts <- ts(as.vector(t(row[,6:(5+row$N)])), start = c(row[[4]],row[[5]]), frequency = frequency)
return(ts)
}
df <- M3Year
freq <- 1
for(i in 1:1) {
ts <- convertRowToTs(df[i,], freq)
plot(ts, xlab = "Time", main = as.character(i))
}
#by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row, frequency) {
ts <- ts(as.vector(t(row[,6:(5+row$N)])), start = c(row[[4]],row[[5]]), frequency = frequency)
return(ts)
}
df <- M3Year
freq <- 1
for(i in 1:1) {
ts <- convertRowToTs(df[i,], freq)
plot(ts, xlab = "Time", main = "A" + as.character(i))
}
convertRowToTs <- function(row, frequency) {
ts <- ts(as.vector(t(row[,6:(5+row$N)])), start = c(row[[4]],row[[5]]), frequency = frequency)
return(ts)
}
df <- M3Year
freq <- 1
for(i in 1:1) {
ts <- convertRowToTs(df[i,], freq)
plot(ts, xlab = "Time", main = cat("Plot of series", i))
}
#by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row, frequency) {
ts <- ts(as.vector(t(row[,6:(5+row$N)])), start = c(row[[4]],row[[5]]), frequency = frequency)
return(ts)
}
df <- M3Year
freq <- 1
for(i in 1:1) {
ts <- convertRowToTs(df[i,], freq)
plot(ts, xlab = "Time", main = paste("Plot of series", i))
}
#by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row, frequency) {
ts <- ts(as.vector(t(row[,6:(5+row$N)])), start = c(row[[4]],row[[5]]), frequency = frequency)
return(ts)
}
df <- M3Year
freq <- 1
for(i in 1:1) {
ts <- convertRowToTs(df[i,], freq)
plot(ts, xlab = "Time", main = paste("Series row", i))
}
#by(df, 1:nrow(df), function(row) convertRowToTs(row))
convertRowToTs <- function(row, frequency) {
ts <- ts(as.vector(t(row[,6:(5+row$N)])), start = c(row[[4]],row[[5]]), frequency = frequency)
return(ts)
}
df <- M3Year
freq <- 1
for(i in 1:nrow(df)) {
ts <- convertRowToTs(df[i,], freq)
plot(ts, xlab = "Time", main = paste("Series row", i))
break()
}
library(lubridate)
install.packages("lubridate")
paste0("NYC",sep="-","HOUSING AUTHORITY")
paste("NYC",sep="-","HOUSING AUTHORITY")
str_c("NYC",sep="-","HOUSING AUTHORITY")
print("NYC",sep="-","HOUSING AUTHORITY")
library(readr)
library(dplyr)
library(tidyr)
library(stringr)
library(Hmisc)
library(outliers)
str_c("NYC",sep="-","HOUSING AUTHORITY")
paste("NYC",sep="-","HOUSING AUTHORITY")
paste0("NYC",sep="-","HOUSING AUTHORITY")
print("NYC",sep="-","HOUSING AUTHORITY")
str_dup("Queensland", times = c("3"))
str_dup("Queensland", times = c(3))
str_dup("Queensland", times = 1:3)
paste0("Queensland", str_dup("Queensland", times = 2))
paste("I", "study", "at", "RMIT", sep = "")
paste0("I", "study", "at", "RMIT")
paste("I", "study", "at", "RMIT")
str_c("I", "study", "at", "RMIT")
a <- c(1,2,3)
b<- (3,2,1)
b<- c(3,2,1)
setdiff(a, b)
identical(a, b)
unique(a, b)
c <- c(2,3,4)
unique(a, c)
unique(a, c)
unique(c, a)
unique(c, a, b)
setequal(a, b)
setequal(a, c)
a %in% b
q15 <- c("12km", "10km")
paste0(strsplit(q15, "km"), "00m")
substring(q15, "km", "00m")
str_replace(q15, pattern = "km", "00m")
str_c(strsplit(q15, "km"), "00m")
setwd("~/Developer/cuni-biostatistics-2/uvod_R+vegan")
getwd()
setwd("~/Developer/cuni-biostatistics-2")
library(vegan)
install.packages("vegan")
library(vegan)
spergula<-read.table("bisorta/bisorta.xls",header=T)
getcw()
getcd()
getwd()
spergula<-read.table("../bisorta/bisorta.xls",header=T)
spergula<-read.table("bistorta/bistorta.xls",header=T)
library(readxl)
bistorta <- read_excel("bistorta/bistorta.xls")
View(bistorta)
bistorta
class(bistorta)
aaa
aaa <- "aaa"
aaa
a <- "aaa"
a
class(a)
b <- 10.5
class(b)
class(bistorta)
head(bistorta)
bistorta[1]
bistorta[1, 1]
bistorta[3:6]
bistorta[,3:6]
bistorta[:,3:6]
bistorta[,3:6]
bistorta[,3:6]
bistorta[8:10,3:6]
bistorta[8:10,c("blok")]
bistorta[8:10,c("blok", "cas")]
dim(bistorta)
View(bistorta)
View(bistorta)
bistorta %>% select(Polybist)
library(dplyr)
bistorta %>% select(Polybist)
bistorta %>% select(c(Polybist))
bistorta %>% select(c(Polybist, hnoj))
View(bistorta)
bistorta %>% mutate(kos = as.logical(kos))
bistorta %>% filter(hnoj == 1)
bistorta %>% filter(hnoj)
bistorta %>% filter(hnoj == TRUE)
bistorta %>% filter(hnoj == 1)
bistorta %>%
select(Polybist) %>%
boxplot(main = "Box Plot of Hindfoot Length")
bistorta %>%
select(Polybist) %>%
boxplot(main = "Box Plot of Hindfoot Length")
bistorta %>%
select(Polybist) %>%
boxplot()
plot(bistorta$Descflex, ylab="Carat", xlab="Depth", main="Carat by Depth")
hist(bistorta$Descflex)
